version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Logging in to Docker Hub...
      - echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - REPO_URL=$(echo $CODEBUILD_INITIATOR | cut -d/ -f2)
      - REPO_NAME=$(echo $REPO_URL | cut -d@ -f1)
      - echo "Original repository name: $ORIGINAL_REPOSITORY_NAME"
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - echo "Create a sanitized image tag name (replace slashes with dashes)"
      - SANITIZED_REPO_NAME=$(echo $REPOSITORY_NAME | tr "/" "-")
      - echo "Use timestamp as fallback if CODEBUILD_RESOLVED_SOURCE_VERSION is empty"
      - SOURCE_VERSION=${CODEBUILD_RESOLVED_SOURCE_VERSION:-$TIMESTAMP}
      - echo "Important: Do not include a colon in IMAGE_TAG as it will be used in $REPOSITORY_URI:$IMAGE_TAG"
      - IMAGE_TAG="${SANITIZED_REPO_NAME}-${SOURCE_VERSION}"
      - echo "Using image tag: $IMAGE_TAG"
  build:
    commands:
      - echo Cloning repository...
      - echo "Using repository name: $REPOSITORY_NAME"
      - echo "Using original repository name: $ORIGINAL_REPOSITORY_NAME"
      - echo "Using server ID: $SERVER_ID"
      - echo "Always use the ORIGINAL_REPOSITORY_NAME for git clone as it has the correct format with slashes"
      - echo "Cloning from: $ORIGINAL_REPOSITORY_NAME"
      - git clone "https://$GITHUB_TOKEN@github.com/$ORIGINAL_REPOSITORY_NAME.git" repo
      - cd repo
      - echo Building the Docker image...
      - echo "Docker image tag: $REPOSITORY_URI:$IMAGE_TAG"
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definition file...
      - echo "{\"imageUri\":\"$REPOSITORY_URI:$IMAGE_TAG\",\"serverId\":\"$SERVER_ID\"}" > imageDefinition.json
artifacts:
  files:
    - imageDefinition.json 